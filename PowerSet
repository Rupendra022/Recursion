// PowerSet of a string >- 
import java.util.* ;
class Main {
    
    public static void print(String st , String current , int idx, ArrayList<String> ans){
        if(idx==st.length()){
            ans.add(current);
            return ; 
        }
        //  pick 
        print(st,current+st.charAt(idx),idx+1,ans);
        // not pick 
         print(st,current,idx+1,ans);
        
        
        
    }
    public static void main(String[] args) {
        // PRINT POWER SET OF A STRING 
        
        String st = "abc";
        ArrayList<String> ans = new ArrayList<>();
        print(st,"",0,ans);
        System.out.print(ans);
       
    }
}


------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// SUBSET OF ARRAY (POWERSET) >- 78 (LEETCODE) 
class Solution {
    public static void print(int[] arr ,   int idx,List<List<Integer>> ans, ArrayList<Integer> a){
        if(idx==arr.length){
            ans.add(new ArrayList<Integer>(a));
            return ; 
        }
        // pick 
        a.add(arr[idx]);
        print(arr,idx+1,ans,a);
        // not pick
        a.remove(a.size()-1);
        print(arr,idx+1,ans,a);
        
        
        
        
    }
    public List<List<Integer>> subsets(int[] nums) {

        List<List<Integer>> ans = new ArrayList<>();
        ArrayList<Integer> a = new ArrayList<>();
        print(nums,0,ans,a);
       
       return ans ;
    }
}


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Is there any subset exist whose sum is equal to target >- 
class Solution {
    public static boolean print(int[] arr , int n , int idx, int target){

            if(target==0){
              return true ;
            }
           if(target<0 || idx==n){
               return false ;
           }
            
        
        // PICK
        if(print(arr,n,idx+1,target-arr[idx])){
            return true ;
        }
        
        // NOT PICK 
         if(print(arr,n,idx+1,target)){
            return true ;
        }

        return false ;
    }


    static Boolean isSubsetSum(int arr[], int target) {
        // code here
       // ArrayList<Integer> ans = new ArrayList<>();
        int idx = 0 ; 
        
        return print(arr,arr.length,idx,target);
        
        
    }
}



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
